pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$krybsz01,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Crypto in the future") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is <Intends to hold cryptocurrency in the future>") +
theme(plot.title = element_text(hjust = 0.5))
# --- extract variable labels for educational and technological literacy questions
labels_literacy <- df_ipst %>%
select(starts_with("kryftl")) %>%
register_labels()
# --- calculate cronbach alpha and construct scales
literacy <- list(
financial_satisfaction = c("kryftl02","kryftl07"),
financial_opportunism = c("kryftl01","kryftl05","kryftl06")
)
financial_satisfaction = c("kryftl02","kryftl07")
financial_opportunism = c("kryftl01","kryftl05","kryftl06")
cronb_lit <- tibble(
variable = vector("character",0),
alpha = vector("numeric",0),
ci_low = vector("numeric",0),
ci_high = vector("numeric",0)
)
## cronbach alpha table for loop ---
# - pvq dimensions
for (i in literacy){
name = i
# name <- deparse(substitute(i))
tmp <- df_ipst %>%
filter(krybws01==1) %>% # only those who've heard of crypto
dplyr::select(i) %>%
ltm::cronbach.alpha(.,na.rm=TRUE,CI=TRUE,B=100)
cronb_lit <- cronb_lit %>% add_row(
variable = name,
alpha = tmp$alpha,
ci_low = tmp$ci[1],
ci_high = tmp$ci[2]
)
rm(tmp)
cronb_lit <- cronb_lit %>% distinct(., alpha, .keep_all = T)
}
cronb_lit
# --- save data
save(list=c("pca","pcav2",
"pca_sex","pca_edu","pca_cryptohold",
"pca_cryptoholdfutur","labels_literacy"),
file="data/pca.Rdata")
# --- PCA financial and technological literacy
if (!require(ggforce)) {
install.packages("ggforce")
require(ggforce)
}
# - packagges
library(psych)
library(haven)
library(sjlabelled)
library(dplyr)
library(tidyverse)
library(factoextra)
library(ggforce)
# - data
load("data/df.Rdata")
# - source scripts
source("scripts/helper_functions.R")
# script
# --- selects items
literacy_items <- df_ipst %>%
dplyr::select(where(is.numeric)) %>%
names() %>%
str_subset(pattern = "^kryftl")
# --- pca centered
pca <- df_ipst %>% haven::zap_labels() %>%
select(all_of(literacy_items)) %>%
psych::principal(nfactors = 2, rotate = "varimax")
pca[["loadings"]] %>%
as.matrix.data.frame(rownames.force = TRUE) %>%
as_tibble(rownames = "item") %>%
ggplot(., aes(x = V1, y = V2)) +
geom_text(aes(x = V1, y = V2, label = item), nudge_x = 0.075) +
geom_point() +
ggtitle("2D PCA-plot") +
theme(plot.title = element_text(hjust = 0.5))
pca$Structure
# version 2
pcav2<-df_ipst %>% haven::zap_labels() %>%
select(all_of(literacy_items)) %>%
prcomp(center=TRUE,scale=TRUE)
summary(pcav2)
# - screeplot to determine number of components
screeplot(pcav2, type="lines", npcs=7,
main="Screeplot of the first 6 PCs")
abline(h=1, col="red",lty=5)
legend("topright",
legend=c("Eigenvalue = 1"),
col=c("red"), lty=5,cex=0.6)
# - cumulative variance plot
cumpro<-cumsum(pcav2$sdev^2 / sum(pcav2$sde^2))
plot(cumpro,
xlab="PCA #",
ylab="Amount of explained variance",
main="Cumulative variance plot")
abline(v=2, col="blue",lty=5)
abline(h=0.505, col="blue", lty=5)
legend("bottomright",
legend=c("Cut-off @ PCA2"),
col=c("blue"),lty=5,cex=0.6)
# -- plots
df_ipst_v2<-df_ipst %>% select(sex,edu,employ,krybst01,krybsz01) %>%
naturalize_labelled_df()
df_ipst$sex<-as.factor(df_ipst$sex)
df_ipst$edu<-as.factor(df_ipst$edu)
df_ipst$krybst01 <- as.factor(df_ipst$krybst01)
df_ipst$krybsz01 <- as.factor(df_ipst$krybsz01)
# this is how it works using ggplot, but it requires more coding
tmp_pca_gender<-fviz_pca_ind(pcav2,
label="none")
plot_gender_pca<-ggplot(cbind(tmp_pca_gender$data,
df_ipst_v2[,"sex_fct"])) +
geom_point(aes(x=x,
y=y,
col=sex_fct)) +
geom_mark_ellipse(aes(x=x,
y=y,
fill=sex_fct,
label=sex_fct),
expand= unit(0.5,"mm"),
label.buffer=unit(-5,"mm")) +
labs(title="Scatter plot for the 2PC on financial and technological literacy",
subtitle="Grouping variable is Gender") +
mytheme
# --------
# --- for gender
pca_sex<-fviz_pca_ind(pcav2,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$sex,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Gender") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is Gender") +
theme(plot.title = element_text(hjust = 0.5))
# --- for education
pca_edu<-fviz_pca_ind(pcav2,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$edu,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Education") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is Education") +
theme(plot.title = element_text(hjust = 0.5))
pca_cryptohold <- fviz_pca_ind(pcav2,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$krybst01,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Holds Crypto") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is <Currently Holds Cryptocurrency>") +
theme(plot.title = element_text(hjust = 0.5))
pca_cryptoholdfutur <- fviz_pca_ind(pcav2,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$krybsz01,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Crypto in the future") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is <Intends to hold cryptocurrency in the future>") +
theme(plot.title = element_text(hjust = 0.5))
# --- extract variable labels for educational and technological literacy questions
labels_literacy <- df_ipst %>%
select(starts_with("kryftl")) %>%
register_labels()
# --- calculate cronbach alpha and construct scales
literacy <- list(
financial_satisfaction = c("kryftl02","kryftl07"),
financial_opportunism = c("kryftl01","kryftl05","kryftl06")
)
financial_satisfaction = c("kryftl02","kryftl07")
financial_opportunism = c("kryftl01","kryftl05","kryftl06")
cronb_lit <- tibble(
variable = vector("character",0),
alpha = vector("numeric",0),
ci_low = vector("numeric",0),
ci_high = vector("numeric",0)
)
## cronbach alpha table for loop ---
# - pvq dimensions
for (i in literacy){
name = i
# name <- deparse(substitute(i))
tmp <- df_ipst %>%
filter(krybws01==1) %>% # only those who've heard of crypto
dplyr::select(i) %>%
ltm::cronbach.alpha(.,na.rm=TRUE,CI=TRUE,B=100)
cronb_lit <- cronb_lit %>% add_row(
variable = name,
alpha = tmp$alpha,
ci_low = tmp$ci[1],
ci_high = tmp$ci[2]
)
rm(tmp)
cronb_lit <- cronb_lit %>% distinct(., alpha, .keep_all = T)
}
# --- save data
save(list=c("pca","pcav2",
"pca_sex","pca_edu","pca_cryptohold",
"pca_cryptoholdfutur","labels_literacy"),
file="data/pca.Rdata")
labels_literacy <- df_ipst %>%
select(starts_with("kryftl")) %>%
register_labels()
labels_literacy <- df %>%
select(starts_with("kryftl")) %>%
register_labels()
# --- PCA financial and technological literacy
if (!require(ggforce)) {
install.packages("ggforce")
require(ggforce)
}
# - packagges
library(psych)
library(haven)
library(sjlabelled)
library(dplyr)
library(tidyverse)
library(factoextra)
library(ggforce)
# - data
load("data/df.Rdata")
# - source scripts
source("scripts/helper_functions.R")
# script
# --- selects items
literacy_items <- df_ipst %>%
dplyr::select(where(is.numeric)) %>%
names() %>%
str_subset(pattern = "^kryftl")
# --- pca centered
pca <- df_ipst %>% haven::zap_labels() %>%
select(all_of(literacy_items)) %>%
psych::principal(nfactors = 2, rotate = "varimax")
pca[["loadings"]] %>%
as.matrix.data.frame(rownames.force = TRUE) %>%
as_tibble(rownames = "item") %>%
ggplot(., aes(x = V1, y = V2)) +
geom_text(aes(x = V1, y = V2, label = item), nudge_x = 0.075) +
geom_point() +
ggtitle("2D PCA-plot") +
theme(plot.title = element_text(hjust = 0.5))
pca$Structure
# version 2
pcav2<-df_ipst %>% haven::zap_labels() %>%
select(all_of(literacy_items)) %>%
prcomp(center=TRUE,scale=TRUE)
summary(pcav2)
# - screeplot to determine number of components
screeplot(pcav2, type="lines", npcs=7,
main="Screeplot of the first 6 PCs")
abline(h=1, col="red",lty=5)
legend("topright",
legend=c("Eigenvalue = 1"),
col=c("red"), lty=5,cex=0.6)
# - cumulative variance plot
cumpro<-cumsum(pcav2$sdev^2 / sum(pcav2$sde^2))
plot(cumpro,
xlab="PCA #",
ylab="Amount of explained variance",
main="Cumulative variance plot")
abline(v=2, col="blue",lty=5)
abline(h=0.505, col="blue", lty=5)
legend("bottomright",
legend=c("Cut-off @ PCA2"),
col=c("blue"),lty=5,cex=0.6)
# -- plots
df_ipst_v2<-df_ipst %>% select(sex,edu,employ,krybst01,krybsz01) %>%
naturalize_labelled_df()
df_ipst$sex<-as.factor(df_ipst$sex)
df_ipst$edu<-as.factor(df_ipst$edu)
df_ipst$krybst01 <- as.factor(df_ipst$krybst01)
df_ipst$krybsz01 <- as.factor(df_ipst$krybsz01)
# this is how it works using ggplot, but it requires more coding
tmp_pca_gender<-fviz_pca_ind(pcav2,
label="none")
plot_gender_pca<-ggplot(cbind(tmp_pca_gender$data,
df_ipst_v2[,"sex_fct"])) +
geom_point(aes(x=x,
y=y,
col=sex_fct)) +
geom_mark_ellipse(aes(x=x,
y=y,
fill=sex_fct,
label=sex_fct),
expand= unit(0.5,"mm"),
label.buffer=unit(-5,"mm")) +
labs(title="Scatter plot for the 2PC on financial and technological literacy",
subtitle="Grouping variable is Gender") +
mytheme
# --------
# --- for gender
pca_sex<-fviz_pca_ind(pcav2,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$sex,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Gender") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is Gender") +
theme(plot.title = element_text(hjust = 0.5))
# --- for education
pca_edu<-fviz_pca_ind(pcav2,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$edu,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Education") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is Education") +
theme(plot.title = element_text(hjust = 0.5))
pca_cryptohold <- fviz_pca_ind(pcav2,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$krybst01,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Holds Crypto") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is <Currently Holds Cryptocurrency>") +
theme(plot.title = element_text(hjust = 0.5))
pca_cryptoholdfutur <- fviz_pca_ind(pcav2,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = df_ipst$krybsz01,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Crypto in the future") +
labs(title="2PC solution based on financial and technological literacy",
subtitle="Grouping variable is <Intends to hold cryptocurrency in the future>") +
theme(plot.title = element_text(hjust = 0.5))
# --- extract variable labels for educational and technological literacy questions
labels_literacy <- df %>%
select(starts_with("kryftl")) %>%
register_labels()
# --- calculate cronbach alpha and construct scales
literacy <- list(
financial_satisfaction = c("kryftl02","kryftl07"),
financial_opportunism = c("kryftl01","kryftl05","kryftl06")
)
financial_satisfaction = c("kryftl02","kryftl07")
financial_opportunism = c("kryftl01","kryftl05","kryftl06")
cronb_lit <- tibble(
variable = vector("character",0),
alpha = vector("numeric",0),
ci_low = vector("numeric",0),
ci_high = vector("numeric",0)
)
## cronbach alpha table for loop ---
# - pvq dimensions
for (i in literacy){
name = i
# name <- deparse(substitute(i))
tmp <- df_ipst %>%
filter(krybws01==1) %>% # only those who've heard of crypto
dplyr::select(i) %>%
ltm::cronbach.alpha(.,na.rm=TRUE,CI=TRUE,B=100)
cronb_lit <- cronb_lit %>% add_row(
variable = name,
alpha = tmp$alpha,
ci_low = tmp$ci[1],
ci_high = tmp$ci[2]
)
rm(tmp)
cronb_lit <- cronb_lit %>% distinct(., alpha, .keep_all = T)
}
# --- save data
save(list=c("pca","pcav2",
"pca_sex","pca_edu","pca_cryptohold",
"pca_cryptoholdfutur","labels_literacy"),
file="data/pca.Rdata")
cronb_lit$indexe <- names(literacy)
cronb_lit <- cronb_lit %>%relocate(indexe, .before=alpha) %>% subset(.,select=-variable) %>% round_df()
cronb_lit
save(list=c("pca","pcav2",
"pca_sex","pca_edu","pca_cryptohold",
"pca_cryptoholdfutur","labels_literacy"),
file="data/pca.Rdata")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
r <- getOption("repos")
r["CRAN"] <-"https://cloud.r-project.org/"
options(repos=r)
## these are packages needed for these analyses
if (!require(tidyverse)) {
install.packages("tidyverse")
require(tidyverse)
}
if (!require(dplyr)) {
install.packages("dplyr")
require(dplyr)
}
if (!require(knitr)) {
install.packages("knitr")
require(knitr)
}
if (!require(wesanderson)) {
install.packages("wesanderson")
require(wesanderson)
}
if (!require(haven)) {
install.packages("haven")
require(haven)
}
if (!require(kableExtra)) {
install.packages("kableExtra")
require(kableExtra)
}
if (!require(DT)) {
install.packages("DT")
require(DT)
}
if (!require(Hmisc)) {
install.packages("Hmisc")
require(Hmisc)
}
if (!require(corrplot)) {
install.packages("corrplot")
require(corrplot)
}
# load packages
library("tidyverse")
library("dplyr")
library("knitr")
library("wesanderson")
library("haven")
library("kableExtra")
library("DT")
library("Hmisc")
library("corrplot")
# --- imports data
load("data/df.Rdata")
load("data/descriptives.Rdata")
load("data/pca.Rdata")
# --- imports source scripts
source("scripts/helper_functions.R")
# --- theme for plots
mytheme <- theme(axis.text.x = element_text(angle = 45, vjust = 0.9, hjust=1, size = 10),
panel.background = element_rect(fill="white", color = "grey50"),
panel.grid.major.y = element_line(color="grey90"),
axis.title.y = element_text(vjust= 0.5, hjust=1, angle = 90) )
cronb_lit %>% knitr::kable(caption="Cronbach alpha for financial satisfaction and opportunism",
digits = 3) %>%
kable_styling()
# --- save data
save(list=c("pca","pcav2",
"pca_sex","pca_edu","pca_cryptohold","cronb_lit",
"pca_cryptoholdfutur","labels_literacy"),
file="data/pca.Rdata")
pcav2
summary(pcav2)
summary(pca)
